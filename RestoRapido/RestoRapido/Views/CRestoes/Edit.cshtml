@model RestoRapido.Models.CResto

@{
    ViewBag.Title = "Modification du restaurant";
}

<h2>Modification du restaurant</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CRestoID)

        <div class="form-group">
            @Html.LabelFor(model => model.resNom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.resNom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.resNom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.resPostal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.resPostal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.resPostal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.resRue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.resRue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.resRue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.resNoCiv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.resNoCiv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.resNoCiv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" onclick="ajoutertable(model => model.CRestoID)" value="Ajouter une table" class="btn btn-default" />
                <input type="submit" value="Sauvegarder" class="btn btn-default" />
            </div>
        </div>
        <table class="table">
            <tr>
                <th>Numéro de table</th>
            </tr>
            @if (Model.Tables != null)
            {
                foreach (var item in Model.Tables)
                {
                    < tr >
                        < td >
                            @Html.DisplayFor(modelItem => item.i_TableNum)
                        </ td >
                        < td >
                            @Html.ActionLink("supprimer", "supprimertable")
                        </ td >
                    </ tr >
                }
            }

        </table>
    </div>
}

<div>
    @Html.ActionLink("Retour aux restaurants", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
